/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tafadzwa.moyo.insurance.module.risk;


import com.innate.cresterp.medical.hospital.entities.PatientRecord;
import com.innate.cresterp.medical.hospital.persistence.PatientRecordJpaController;
import com.tafadzwa.moyo.insurance.module.communications.JdgCommunication;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ActionMap;
import javax.swing.SwingUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.nodes.Children;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.RequestProcessor;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.tafadzwa.moyo.insurance.module.risk//CustomerTopComponent//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CustomerTopComponentTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "com.tafadzwa.moyo.insurance.module.risk.CustomerTopComponentTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CustomerTopComponentAction",
        preferredID = "CustomerTopComponentTopComponent"
)
@Messages({
    "CTL_CustomerTopComponentAction=CustomerTopComponent",
    "CTL_CustomerTopComponentTopComponent=Customer List Window",
    "HINT_CustomerTopComponentTopComponent=This is a CustomerTopComponent window"
})
public final class CustomerTopComponent extends  TopComponent implements ExplorerManager.Provider  {
  private static CustomerTopComponent instance;
      private static final ExplorerManager em = new ExplorerManager();
    private final PatientRecordJpaController patientManager =  new PatientRecordJpaController();
    
    public CustomerTopComponent() {
        initComponents();
        setName("Customer List");
        setToolTipText("View Customers");
          ActionMap map = this.getActionMap();
        map.put("delete", ExplorerUtils.actionDelete(em, true)); //NOI18N
        associateLookup(ExplorerUtils.createLookup(em, map));
        RequestProcessor.getDefault().post(new Runnable () {
            @Override
            public void run() {
                readCustomer();
            }
        });
    }

    
      
    public static void refreshNode() {

     
    List<PatientRecord> resultList = new PatientRecordJpaController().findPatientRecordEntities();
    em.setRootContext(new CustomerRootNode(Children.create(new CustomerChildFactory(resultList), true)));
} 

    private void readCustomer() {
        
    
      
        SwingUtilities.invokeLater(new Runnable () {
            @Override
            public void run() {
                @SuppressWarnings("unchecked")
                List<PatientRecord> resultList = patientManager.findPatientRecordEntities();
                em.setRootContext(new CustomerRootNode(Children.create(new CustomerChildFactory(resultList), true)));
            }
        });
    }
    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTreeView1 = new org.openide.explorer.view.BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(beanTreeView1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(beanTreeView1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.BeanTreeView beanTreeView1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
            try {

         
              JdgCommunication communication = new JdgCommunication(null, false);
            communication.setLocationByPlatform(true);
            communication.setVisible(true);
            
        } catch (Exception ec) {
            Exceptions.printStackTrace(ec);
        }
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
